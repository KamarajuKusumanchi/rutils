#! /usr/bin/env bash

# Objective:
# rebase a git repository to the remote.
# Requirement:
# It should work even if there are any uncommitted changes in the local repository.
# If the repository needs a push or if it has diverged, then inform about it but
# do not update the local repository.
#

# This script is adapted from the code snippet in
# https://stackoverflow.com/a/3278427/6305733 .
# Check the link to understand how it works.

# set -x

git remote update

UPSTREAM=${1:-'@{u}'}
LOCAL=$(git rev-parse @)
REMOTE=$(git rev-parse "$UPSTREAM")
BASE=$(git merge-base @ "$UPSTREAM")

if [ -z $BASE ]; then
    echo "\$BASE is empty"
fi

if [ $LOCAL = $REMOTE ]; then
    echo "Up-to-date"
elif [ -z $BASE ] || [ $LOCAL = $BASE ]; then
    # The "-z $BASE" checks if the BASE variable is empty. This happens when
    # trying to update a local copy of <https://github.com/stamparm/ipsum>.
    # Pull the latest version in this scenario.

    echo "Need to pull"
    git stash
    git pull --rebase
    git stash pop
    NEWLOCAL=$(git rev-parse @)
    if [ $NEWLOCAL = $REMOTE ]; then
        echo "Pull successful"
    fi
elif [ $REMOTE = $BASE ]; then
    echo "Need to push"
else
    echo "Diverged"
fi

